services:
  app:
    image: andnikdoc/api.blogpsy.ru:latest   # Готовый образ из Docker Hub
    restart: unless-stopped
    ports:
      - "5000"
    env_file:
      - .env.prod
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

  postgres:
    image: postgres:15
    restart: unless-stopped
    env_file: .env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d blogdb']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend

  redis:
    image: redis:7
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    env_file: .env.prod
    volumes:
      - minio_data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./html:/usr/share/nginx/html
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./html:/data/acme-challenge
    environment:
      TZ: Europe/Moscow
    command: certonly --webroot -w /data/acme-challenge -d api.blogpsy.ru --email your@email.com --agree-tos --no-eff-email
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
  minio_data: