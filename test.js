const API_URL = 'http://localhost:5000'

const TEST_DATA = {
	email: 'test@example.com',
	password: 'test123456789',
	postId: 'cmb463zrd0001ppyc1lefg6fx',
	commentId: 'cmb4656pg0003ppyc1mvcabsf',
	userId: 'cmb2q55o20000ppbcjs7pfy54', // –î–æ–±–∞–≤–∏–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

async function runTests() {
	let sessionCookie = null

	// 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
	console.log('üöÄ –¢–µ—Å—Ç: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
	try {
		const res = await fetch(`${API_URL}/api/auth/login`, {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({
				email: TEST_DATA.email,
				password: TEST_DATA.password,
			}),
		})

		if (res.status === 200) {
			sessionCookie = res.headers.get('set-cookie')
			console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞')
		} else {
			throw new Error(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${res.status}`)
		}
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ /login:', err.message)
		return
	}

	// 2. GET /me
	console.log('üöÄ –¢–µ—Å—Ç: GET /api/auth/me')
	try {
		const res = await fetch(`${API_URL}/api/auth/me`, {
			headers: sessionCookie ? { Cookie: sessionCookie } : {},
		})

		if (res.status === 200) {
			console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
		} else {
			throw new Error(`–û—à–∏–±–∫–∞ /me: ${res.status}`)
		}
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ /me:', err.message)
	}

	// 3. GET /posts/:id
	console.log(`üöÄ –¢–µ—Å—Ç: GET /api/posts/${TEST_DATA.postId}`)
	try {
		const res = await fetch(`${API_URL}/api/posts/${TEST_DATA.postId}`, {
			headers: sessionCookie ? { Cookie: sessionCookie } : {},
		})

		if (res.status === 200) {
			console.log('‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω')
		} else {
			throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞: ${res.status}`)
		}
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ /posts/:id:', err.message)
	}

	// 4. GET /posts/:id/comments
	console.log(`üöÄ –¢–µ—Å—Ç: GET /api/posts/${TEST_DATA.postId}/comments`)
	try {
		const res = await fetch(
			`${API_URL}/api/posts/${TEST_DATA.postId}/comments`,
			{
				headers: sessionCookie ? { Cookie: sessionCookie } : {},
			}
		)

		if (res.status === 200) {
			console.log('‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
		} else {
			throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${res.status}`)
		}
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ /posts/:id/comments:', err.message)
	}

	// 5. GET /posts/search
	console.log(`üöÄ –¢–µ—Å—Ç: GET /api/posts/search?q="—Ç–µ—Å—Ç"`)
	try {
		const res = await fetch(
			`${API_URL}/api/posts/search?q=%D1%82%D0%B5%D1%81%D1%82`,
			{
				headers: sessionCookie ? { Cookie: sessionCookie } : {},
			}
		)

		if (res.status === 200) {
			console.log('‚úÖ –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç')
		} else {
			throw new Error(`–û—à–∏–±–∫–∞ /posts/search: ${res.status}`)
		}
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ /posts/search:', err.message)
	}

	// 6. GET /posts/top
	console.log('üöÄ –¢–µ—Å—Ç: GET /api/posts/top')
	try {
		const res = await fetch(`${API_URL}/api/posts/top`, {
			headers: sessionCookie ? { Cookie: sessionCookie } : {},
		})

		if (res.status === 200) {
			console.log('‚úÖ –¢–æ–ø –ø–æ—Å—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω')
		} else {
			throw new Error(`–û—à–∏–±–∫–∞ /posts/top: ${res.status}`)
		}
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ /posts/top:', err.message)
	}

	// 7. GET /user/{userId}
	console.log(`üöÄ –¢–µ—Å—Ç: GET /api/user/${TEST_DATA.userId}`)
	try {
		const res = await fetch(`${API_URL}/api/user/${TEST_DATA.userId}`, {
			headers: sessionCookie ? { Cookie: sessionCookie } : {},
		})

		if (res.status === 200) {
			console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω')
		} else {
			throw new Error(`–û—à–∏–±–∫–∞ /user/:id: ${res.status}`)
		}
	} catch (err) {
		console.error('‚ùå –û—à–∏–±–∫–∞ /user/:id:', err.message)
	}

	console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã')
}

runTests()
