const API_URL = 'http://localhost:5000'

const TEST_DATA = {
	email: 'test@example.com',
	password: 'test123456789',
	postId: 'cmb463zrd0001ppyc1lefg6fx',
	commentId: 'cmb4656pg0003ppyc1mvcabsf',
	userId: 'cmb2q55o20000ppbcjs7pfy54',
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤ (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª)
const TEST_CONFIG = [
	{
		name: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
		method: 'POST',
		path: '/api/auth/login',
		noAuth: true,
		body: { email: TEST_DATA.email, password: TEST_DATA.password },
		expectStatus: 200,
	},
	{
		name: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
		method: 'GET',
		path: '/api/auth/me',
		expectStatus: 200,
	},
	{
		name: '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞',
		method: 'GET',
		path: `/api/posts/${TEST_DATA.postId}`,
		expectStatus: 200,
	},
	{
		name: '–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤',
		method: 'GET',
		path: `/api/posts/${TEST_DATA.postId}/comments`,
		expectStatus: 200,
	},
	{
		name: '–ü–æ–∏—Å–∫ –ø–æ—Å—Ç–æ–≤',
		method: 'GET',
		path: '/api/posts/search?q=—Ç–µ—Å—Ç',
		expectStatus: 200,
	},
	{
		name: '–¢–æ–ø –ø–æ—Å—Ç–æ–≤',
		method: 'GET',
		path: '/api/posts/top',
		expectStatus: 200,
	},
	{
		name: '–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
		method: 'GET',
		path: `/api/user/${TEST_DATA.userId}`,
		expectStatus: 200,
	},
]

async function runTests() {
	let sessionCookie = null
	let passedTests = 0
	let failedTests = 0

	console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API\n')

	for (const test of TEST_CONFIG) {
		console.log(`üîπ –¢–µ—Å—Ç: ${test.name}`)
		console.log(`${test.method} ${test.path}`)

		try {
			// –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è —Å–∞–º–æ–≥–æ —Ç–µ—Å—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
			const headers = { 'Content-Type': 'application/json' }
			if (sessionCookie && !test.noAuth) {
				headers.Cookie = sessionCookie
			}

			const res = await fetch(`${API_URL}${test.path}`, {
				method: test.method,
				headers,
				body: test.body ? JSON.stringify(test.body) : undefined,
			})

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—É–∫—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
			if (test.path === '/api/auth/login' && res.status === 200) {
				sessionCookie = res.headers.get('set-cookie')
				console.log('üîê –ö—É–∫–∞ —Å–µ—Å—Å–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞')
			}

			if (res.status === test.expectStatus) {
				console.log(`‚úÖ –£—Å–ø–µ—Ö (${res.status})`)
				passedTests++
			} else {
				throw new Error(
					`–û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å ${test.expectStatus}, –ø–æ–ª—É—á–µ–Ω ${res.status}`
				)
			}
		} catch (err) {
			console.error(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`)
			failedTests++
		}
		console.log('‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï')
	}

	console.log('\nüìä –ò—Ç–æ–≥–∏:')
	console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: ${passedTests}`)
	console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã—Ö: ${failedTests}`)
	console.log(`üèÅ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${TEST_CONFIG.length}`)
}

runTests()
