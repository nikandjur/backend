{
  "_": {
    "postman_id": "8ce290e8-04ec-4988-80ff-0d457f056e13"
  },
  "item": [
    {
      "id": "cb257e96-f6ea-4789-9539-b157cee3fac7",
      "name": "Auth",
      "description": {
        "content": "Авторизация и аутентификация",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8ee22932-6366-4637-aada-be22e54b88ce",
          "name": "Регистрация нового пользователя",
          "request": {
            "name": "Регистрация нового пользователя",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "auth",
                "register"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"in ut consectetur\",\n  \"password\": \"veniam voluptate laboris\",\n  \"name\": \"sit eu amet enim\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b6d0c3b0-9761-411e-b7bd-87be5b8814fa",
              "name": "Пользователь создан",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "register"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"in ut consectetur\",\n  \"password\": \"veniam voluptate laboris\",\n  \"name\": \"sit eu amet enim\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c3172302-20ea-4060-ba24-26efbe493682",
              "name": "Ошибка валидации",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "register"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"in ut consectetur\",\n  \"password\": \"veniam voluptate laboris\",\n  \"name\": \"sit eu amet enim\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7aae8386-ace1-44a8-b02d-afbbf82a72af",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/auth/register - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2d42406d-94fe-40c1-8642-07303b1dbecf",
          "name": "Вход в систему",
          "request": {
            "name": "Вход в систему",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "auth",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"minim in\",\n  \"password\": \"Lorem\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b4aa0d0b-2799-4477-b10c-ab336387af95",
              "name": "Успешный вход",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"minim in\",\n  \"password\": \"Lorem\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e55dcc84-b923-4f1c-88e9-91568e378f25",
              "name": "Неверные данные",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"minim in\",\n  \"password\": \"Lorem\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "17e1c3b5-50dd-4330-921d-90409903a479",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/auth/login - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d85c0a5c-12f4-44a0-8205-9976685b6c90",
          "name": "Выход пользователя (удаление sessionId из cookie)",
          "request": {
            "name": "Выход пользователя (удаление sessionId из cookie)",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "auth",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "58de24ee-861a-48a0-a363-365fc1a84f42",
              "name": "Успешный выход",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3c289c3a-6baf-41a0-938a-aef7bcefe23b",
              "name": "Недействительный sessionId",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "87d175c7-3df2-4dd0-9147-038521203ccb",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/auth/logout - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0d51a495-7f1c-4f2e-b96b-322acd966d5f",
          "name": "Получить информацию о текущем пользователе",
          "request": {
            "name": "Получить информацию о текущем пользователе",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "auth",
                "me"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {},
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "sessionId",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "15ae2d9a-6ffa-493d-b555-475a6f6c7b50",
              "name": "Аутентифицированный пользователь",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "me"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "sessionId",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"aute ad proident cupidatat eli\",\n  \"user\": {\n    \"id\": \"sunt esse in elit\",\n    \"email\": \"amet officia\",\n    \"name\": \"ea\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "12564d84-f7c3-4eb4-aa53-f7fa7bdbe939",
              "name": "Неавторизован",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "me"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "sessionId",
                    "value": "<API Key>"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "509881a6-35c4-4d66-aafa-a1b0ae5d29f3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/auth/me - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/auth/me - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/auth/me - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"},\"user\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/auth/me - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ac73d0cd-1fdd-46f5-8523-3923b21ba9f4",
          "name": "Подтверждение email",
          "request": {
            "name": "Подтверждение email",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "auth",
                "verify-email"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Токен подтверждения email",
                    "type": "text/plain"
                  },
                  "key": "token",
                  "value": "dolore deserunt Ut"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "36d8598f-5fe6-4339-b9ee-33ed68ad2afe",
              "name": "Email успешно подтвержден",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify-email"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Токен подтверждения email",
                        "type": "text/plain"
                      },
                      "key": "token",
                      "value": "dolore deserunt Ut"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"user\": {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"name\": \"Иван Иванов\",\n    \"email\": \"user@example.com\",\n    \"avatarUrl\": \"https://niXTGLSMOiYueGPHWmzuPPqk.arU43gBVxlHMnYxuC1sV-EX\",\n    \"createdAt\": \"2023-10-01T12:00:00Z\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5706da5d-ba0f-42fa-ba6f-5d042936f7c3",
              "name": "Неверный или просроченный токен",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "verify-email"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Токен подтверждения email",
                        "type": "text/plain"
                      },
                      "key": "token",
                      "value": "dolore deserunt Ut"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee5f14b0-9e5b-40b4-af40-e9c294c0fe13",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/auth/verify-email - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/auth/verify-email - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/auth/verify-email - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"user\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\",\"format\":\"email\"},\"avatarUrl\":{\"type\":\"string\",\"format\":\"uri\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/auth/verify-email - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5368de47-069e-475d-981b-d9604341c7ff",
          "name": "Повторная отправка письма подтверждения",
          "request": {
            "name": "Повторная отправка письма подтверждения",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "auth",
                "resend-verification"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {},
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "type": "any",
                  "value": "sessionId",
                  "key": "key"
                },
                {
                  "type": "any",
                  "value": "{{apiKey}}",
                  "key": "value"
                },
                {
                  "type": "any",
                  "value": "header",
                  "key": "in"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "06e25e4f-7bb2-403f-ab05-b4f5cabdffbb",
              "name": "Письмо отправлено",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "resend-verification"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "sessionId",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Verification email sent\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "60925e5e-6290-4f91-a957-57612d8b97c4",
              "name": "Не авторизован",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "resend-verification"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "sessionId",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e3805a86-b5e1-4598-b4f2-f827acfc6df0",
              "name": "Email уже подтвержден",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "resend-verification"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "sessionId",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d24af5fa-e049-4593-8764-4d380869ea8b",
              "name": "Слишком много запросов (лимит 5 в час)",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "auth",
                    "resend-verification"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: apikey",
                      "type": "text/plain"
                    },
                    "key": "sessionId",
                    "value": "<API Key>"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Too Many Requests",
              "code": 429,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a82d098a-abb1-4b27-825a-dfd689ac1997",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/auth/resend-verification - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/auth/resend-verification - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/auth/resend-verification - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/auth/resend-verification - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "989364c2-884b-4992-b579-82a762c1182e",
      "name": "Comments",
      "description": {
        "content": "Управление комментариями к постам",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "681823a0-8b39-4b94-a34e-bfae6450c5ed",
          "name": "Создать новый комментарий",
          "request": {
            "name": "Создать новый комментарий",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                ":postId",
                "comments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID поста",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "postId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Новый комментарий\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "93e70573-9765-4ab0-abed-9e9d7f33d3bc",
              "name": "Комментарий успешно создан",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":postId",
                    "comments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"text\": \"Новый комментарий\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"clw8qx7uh000008jt2ok0b9vz\",\n  \"text\": \"Комментарий\",\n  \"createdAt\": \"1962-09-13T09:20:36.417Z\",\n  \"userId\": \"Ut\",\n  \"postId\": \"nostrud minim laboris\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7dc3f2a9-d212-4c54-8dc7-0485b259937a",
              "name": "Ошибка валидации",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":postId",
                    "comments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"text\": \"Новый комментарий\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e81cc86c-d71a-45ae-b902-716aa713cead",
              "name": "Неавторизованный доступ",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":postId",
                    "comments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"text\": \"Новый комментарий\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39c5482b-c2ad-49f9-b833-bc1a7e4d6992",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/posts/:postId/comments - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/posts/:postId/comments - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/posts/:postId/comments - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"text\":{\"type\":\"string\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"userId\":{\"type\":\"string\"},\"postId\":{\"type\":\"string\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/posts/:postId/comments - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d42a0360-64ac-4369-a370-7955064730be",
          "name": "Получить комментарии к посту",
          "request": {
            "name": "Получить комментарии к посту",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                ":postId",
                "comments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID поста",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "postId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "95316989-2612-4b14-a4db-9eac9b9cc9c4",
              "name": "Список комментариев",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":postId",
                    "comments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"clw8qx7uh000008jt2ok0b9vz\",\n    \"text\": \"Комментарий\",\n    \"createdAt\": \"2017-12-08T21:19:45.663Z\",\n    \"userId\": \"do sunt voluptate nisi\",\n    \"postId\": \"et velit incididunt aliquip laboris\"\n  },\n  {\n    \"id\": \"clw8qx7uh000008jt2ok0b9vz\",\n    \"text\": \"Комментарий\",\n    \"createdAt\": \"1985-03-06T18:57:03.751Z\",\n    \"userId\": \"aliquip lab\",\n    \"postId\": \"ullamco ipsum id et pariatur\"\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "28dd74f9-0ebb-4634-b9cc-2a7af983718d",
              "name": "Пост не найден",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":postId",
                    "comments"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aedf5f82-b6b4-4c0f-96b2-f2b16f4c1bce",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/posts/:postId/comments - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/posts/:postId/comments - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/posts/:postId/comments - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"text\":{\"type\":\"string\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"userId\":{\"type\":\"string\"},\"postId\":{\"type\":\"string\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/posts/:postId/comments - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "672514f5-6c50-498a-a975-80fbba8ab7f9",
          "name": "Удалить комментарий",
          "request": {
            "name": "Удалить комментарий",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "comments",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID комментария",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "id"
                }
              ]
            },
            "method": "DELETE",
            "body": {},
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b4cf13d7-2d55-43f9-bde2-c904bf2f1bdc",
              "name": "Комментарий успешно удален",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "comments",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2ab41938-42b9-4751-852d-c691e0afe7ca",
              "name": "Неавторизованный доступ",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "comments",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9aaf52bc-f278-4012-9351-8ddcc0d010aa",
              "name": "Нет прав на удаление",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "comments",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "ade7f63a-b774-40cf-9403-6f7c5bf97224",
              "name": "Комментарий не найден",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "comments",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92928822-03fe-4e06-92e9-3fba70d626ed",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/comments/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/comments/:id - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d79d0cec-a06e-48cc-b705-4784430ffba1",
      "name": "Posts",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "86d1a3e3-722e-49ac-a0f0-1514b847a05a",
          "name": "Создать новый пост",
          "request": {
            "name": "Создать новый пост",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a2cf47f3-59f7-42ff-b48d-d63da76a011c",
              "name": "Пост успешно создан",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\",\n  \"likes\": 5,\n  \"createdAt\": \"2023-10-01T12:00:00Z\",\n  \"author\": {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"name\": \"Иван Иванов\",\n    \"email\": \"user@example.com\",\n    \"avatarUrl\": \"https://UoaFQXbtb.pmYrts16g6i30BxjpY9.7L4ajH\",\n    \"createdAt\": \"2023-10-01T12:00:00Z\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "81dd8783-2711-4b8c-8691-6372ccdef239",
              "name": "Ошибка валидации",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "38b0899a-d2a8-4593-8ce8-8cde482dbf5f",
              "name": "Неавторизованный доступ",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ca2689d3-6860-4b23-a9d6-499946da37be",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/posts - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/posts - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/posts - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"content\":{\"type\":\"string\"},\"likes\":{\"type\":\"integer\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"author\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\",\"format\":\"email\"},\"avatarUrl\":{\"type\":\"string\",\"format\":\"uri\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/posts - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3e1da1d8-1602-4282-a201-4c718f7f8cf3",
          "name": "Поиск постов",
          "request": {
            "name": "Поиск постов",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                "search"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "q",
                  "value": "технологии"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "0"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4937b62c-459f-4a70-888d-5616a64fe914",
              "name": "Результаты поиска",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "key": "q",
                      "value": "технологии"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "offset",
                      "value": "0"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"title\": \"Мой первый пост\",\n    \"content\": \"Содержание моего первого поста\",\n    \"likes\": 5,\n    \"createdAt\": \"2023-10-01T12:00:00Z\",\n    \"author\": {\n      \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n      \"name\": \"Иван Иванов\",\n      \"email\": \"user@example.com\",\n      \"avatarUrl\": \"http://mxRYbEbylAzWcWJbjRybomeGmuluF.qrFrYZ072qV6dYC5.ao7uKoGgtszyITvDSBLToFFCHNIhAyZdGwP2O\",\n      \"createdAt\": \"2023-10-01T12:00:00Z\"\n    }\n  },\n  {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"title\": \"Мой первый пост\",\n    \"content\": \"Содержание моего первого поста\",\n    \"likes\": 5,\n    \"createdAt\": \"2023-10-01T12:00:00Z\",\n    \"author\": {\n      \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n      \"name\": \"Иван Иванов\",\n      \"email\": \"user@example.com\",\n      \"avatarUrl\": \"https://srkKzYYdgQyaaahoOjBumGqgR.yhXhZVL8RDTtXkFd4arVBkWdht9abv2\",\n      \"createdAt\": \"2023-10-01T12:00:00Z\"\n    }\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "502cd617-4af8-4b43-80af-6383a3e5a4dc",
              "name": "Не указан поисковый запрос",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "key": "q",
                      "value": "технологии"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "offset",
                      "value": "0"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "efa3936f-9c9a-4d65-b480-b1074c719f1a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/posts/search - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/posts/search - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/posts/search - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"content\":{\"type\":\"string\"},\"likes\":{\"type\":\"integer\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"author\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\",\"format\":\"email\"},\"avatarUrl\":{\"type\":\"string\",\"format\":\"uri\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/posts/search - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c2c1c757-08f7-43be-9e41-ac5465b9f0de",
          "name": "Получить топ постов",
          "request": {
            "name": "Получить топ постов",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                "top"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8959a38d-603c-46b1-b99c-92a8356e8890",
              "name": "Список топ постов",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    "top"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "limit",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"title\": \"Мой первый пост\",\n    \"content\": \"Содержание моего первого поста\",\n    \"likes\": 5,\n    \"createdAt\": \"2023-10-01T12:00:00Z\",\n    \"author\": {\n      \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n      \"name\": \"Иван Иванов\",\n      \"email\": \"user@example.com\",\n      \"avatarUrl\": \"http://mxRYbEbylAzWcWJbjRybomeGmuluF.qrFrYZ072qV6dYC5.ao7uKoGgtszyITvDSBLToFFCHNIhAyZdGwP2O\",\n      \"createdAt\": \"2023-10-01T12:00:00Z\"\n    }\n  },\n  {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"title\": \"Мой первый пост\",\n    \"content\": \"Содержание моего первого поста\",\n    \"likes\": 5,\n    \"createdAt\": \"2023-10-01T12:00:00Z\",\n    \"author\": {\n      \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n      \"name\": \"Иван Иванов\",\n      \"email\": \"user@example.com\",\n      \"avatarUrl\": \"https://srkKzYYdgQyaaahoOjBumGqgR.yhXhZVL8RDTtXkFd4arVBkWdht9abv2\",\n      \"createdAt\": \"2023-10-01T12:00:00Z\"\n    }\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a72a9a8d-97d4-40da-9b60-8a5bf56f35ab",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/posts/top - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/posts/top - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/posts/top - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"content\":{\"type\":\"string\"},\"likes\":{\"type\":\"integer\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"author\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\",\"format\":\"email\"},\"avatarUrl\":{\"type\":\"string\",\"format\":\"uri\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/posts/top - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6a565a33-71c3-42df-8c3b-75726ba154e6",
          "name": "Поставить лайк посту",
          "request": {
            "name": "Поставить лайк посту",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                ":id",
                "like"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "id"
                }
              ]
            },
            "method": "POST",
            "body": {},
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "cfc5c5f0-ae1f-4f80-86cd-68faf50105c5",
              "name": "Лайк успешно поставлен",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id",
                    "like"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "043c2f7d-511e-46d6-9aae-f2203cdbb399",
              "name": "Уже лайкнуто",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id",
                    "like"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5b860275-ca7f-4d47-8fc8-58f3894c7494",
              "name": "Неавторизованный доступ",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id",
                    "like"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "POST",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e772aed3-7047-4007-940e-d3439c928738",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/posts/:id/like - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[POST]::/api/posts/:id/like - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6eb39e8c-a725-45f5-9a65-6d11d292e767",
          "name": "Получить пост по ID",
          "request": {
            "name": "Получить пост по ID",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "clnjak7xj000008l0a9zq3k4f",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5d73e5b5-6b3b-4fe2-af0a-f991befa1f4b",
              "name": "Данные поста",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\",\n  \"likes\": 5,\n  \"createdAt\": \"2023-10-01T12:00:00Z\",\n  \"author\": {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"name\": \"Иван Иванов\",\n    \"email\": \"user@example.com\",\n    \"avatarUrl\": \"https://UoaFQXbtb.pmYrts16g6i30BxjpY9.7L4ajH\",\n    \"createdAt\": \"2023-10-01T12:00:00Z\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b1e065f7-deba-4507-a582-00247fcb3099",
              "name": "Пост не найден",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4fa006dc-cb4d-4991-9521-da7e025d31d8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/posts/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/posts/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/posts/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"content\":{\"type\":\"string\"},\"likes\":{\"type\":\"integer\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"author\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\",\"format\":\"email\"},\"avatarUrl\":{\"type\":\"string\",\"format\":\"uri\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/posts/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d6486633-978a-4fdf-add2-2585cd66135c",
          "name": "Обновить пост",
          "request": {
            "name": "Обновить пост",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "dec6917e-5140-4985-a45e-d4e85acb764f",
              "name": "Пост успешно обновлен",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\",\n  \"likes\": 5,\n  \"createdAt\": \"2023-10-01T12:00:00Z\",\n  \"author\": {\n    \"id\": \"clnjak7xj000008l0a9zq3k4f\",\n    \"name\": \"Иван Иванов\",\n    \"email\": \"user@example.com\",\n    \"avatarUrl\": \"https://UoaFQXbtb.pmYrts16g6i30BxjpY9.7L4ajH\",\n    \"createdAt\": \"2023-10-01T12:00:00Z\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dfe737cc-f1b1-4ce2-ab76-f6b2adea1971",
              "name": "Ошибка валидации",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "cb34b3f7-9630-4db8-8451-b178775ab64b",
              "name": "Неавторизованный доступ",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b5b7c55f-194c-4a5b-ab04-6dc6350c79bd",
              "name": "Нет прав на редактирование",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Мой первый пост\",\n  \"content\": \"Содержание моего первого поста\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fac1ee13-76fe-4a16-b332-b601f6689640",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PATCH]::/api/posts/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PATCH]::/api/posts/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PATCH]::/api/posts/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"content\":{\"type\":\"string\"},\"likes\":{\"type\":\"integer\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"},\"author\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\",\"format\":\"email\"},\"avatarUrl\":{\"type\":\"string\",\"format\":\"uri\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PATCH]::/api/posts/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d9a8ff27-c262-4e78-b765-88fa5fbd07ec",
          "name": "Удалить пост",
          "request": {
            "name": "Удалить пост",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "posts",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "id"
                }
              ]
            },
            "method": "DELETE",
            "body": {},
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "16fda18e-c0ff-40cc-9de2-78321ccb5c17",
              "name": "Пост успешно удален",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "No Content",
              "code": 204,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a21c4f19-44cc-47e6-9fd5-1156d83733d4",
              "name": "Неавторизованный доступ",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "8dfd0bee-0d25-45d6-8c95-84a049d1510e",
              "name": "Нет прав на удаление",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "posts",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "52b3826c-788d-4763-9ff9-87b03b793f19",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/posts/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response has empty Body \npm.test(\"[DELETE]::/api/posts/:id - Response has empty Body\", function () {\n    pm.response.to.not.be.withBody;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4b535f5d-a3a5-436e-90cb-a7dc23a94e69",
          "name": "Получить список постов пользователя с пагинацией",
          "request": {
            "name": "Получить список постов пользователя с пагинацией",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "user",
                ":userId",
                "posts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "description": {
                    "content": "Номер страницы",
                    "type": "text/plain"
                  },
                  "key": "page",
                  "value": "1"
                },
                {
                  "disabled": true,
                  "description": {
                    "content": "Количество записей на странице",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "10"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID пользователя (cuid)",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "userId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "66a02930-91f2-45bc-a43b-6186b5231c6c",
              "name": "Список постов пользователя",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "user",
                    ":userId",
                    "posts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Номер страницы",
                        "type": "text/plain"
                      },
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Количество записей на странице",
                        "type": "text/plain"
                      },
                      "key": "limit",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"nulla cupidatat velit\",\n    \"title\": \"ullamco sint\",\n    \"excerpt\": \"irure deserunt pariatur Lorem amet\"\n  },\n  {\n    \"id\": \"laboris ad ullamco\",\n    \"title\": \"v\",\n    \"excerpt\": \"ut eu velit\"\n  }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "de0ed698-4033-4c41-af27-593844f347ca",
              "name": "Пользователь или посты не найдены",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "user",
                    ":userId",
                    "posts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "description": {
                        "content": "Номер страницы",
                        "type": "text/plain"
                      },
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "disabled": true,
                      "description": {
                        "content": "Количество записей на странице",
                        "type": "text/plain"
                      },
                      "key": "limit",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ddd25d3e-f4f5-47cb-9596-b062dcf66639",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/user/:userId/posts - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/user/:userId/posts - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/user/:userId/posts - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"excerpt\":{\"type\":\"string\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/user/:userId/posts - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7ad4eecf-32e3-4a97-9419-01873913efb8",
      "name": "Users",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "98cf7aed-d297-4d6a-b8b7-5364348087cb",
          "name": "Обновить профиль текущего пользователя",
          "request": {
            "name": "Обновить профиль текущего пользователя",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "user",
                "profile"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Иван Петров\",\n  \"bio\": \"Люблю разрабатывать API\",\n  \"website\": \"https://example.com \"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0507c256-dbee-4068-932d-0441373e150c",
              "name": "Обновлённый профиль",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "user",
                    "profile"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Иван Петров\",\n  \"bio\": \"Люблю разрабатывать API\",\n  \"website\": \"https://example.com \"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"et\",\n  \"name\": \"Ut sit\",\n  \"bio\": \"dolor cupidatat \",\n  \"website\": \"https://VbKahPQKqXSOhxDbHsYxZf.hxrcUYFFfs,sfxDNGLEpEKFyQzf\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7ecaa138-fa40-410d-808d-7f7e65c2991c",
              "name": "Ошибка валидации",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "user",
                    "profile"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Иван Петров\",\n  \"bio\": \"Люблю разрабатывать API\",\n  \"website\": \"https://example.com \"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [],
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "817354d3-93de-492d-84c4-62671facccc0",
              "name": "Не авторизован",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "user",
                    "profile"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Иван Петров\",\n  \"bio\": \"Люблю разрабатывать API\",\n  \"website\": \"https://example.com \"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "254df4f7-5267-4131-8b36-bd1695741251",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/user/profile - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/user/profile - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/user/profile - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"bio\":{\"type\":\"string\"},\"website\":{\"type\":\"string\",\"format\":\"uri\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/user/profile - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4bbc0701-bcd8-4a4d-81c8-25e0c0e46e0f",
          "name": "Получить профиль пользователя по ID",
          "request": {
            "name": "Получить профиль пользователя по ID",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "user",
                ":userId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID пользователя (cuid)",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dolore deserunt Ut",
                  "key": "userId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "body": {}
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "46569e38-2463-4311-bfb3-fc00ba67a969",
              "name": "Профиль пользователя",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "user",
                    ":userId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"cillum nostrud id incididunt\",\n  \"name\": \"tempor enim\",\n  \"email\": \"RHAGAa@EGl.udk\",\n  \"avatarUrl\": \"http://yNJQecrKVzej.xjyvl-pqLQntMa\",\n  \"bio\": \"ea\",\n  \"website\": \"https://PJdWTLcqeVVgnnYwgjfXzMRNJ.eyW52,BQ6IXpM1-kZHDd3WfwwRNWwM+qaiBjdxIcudVFl0quRq.i2bCYcca6uM\",\n  \"emailVerified\": false,\n  \"postsCount\": 9768060\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "36bf0694-4314-49c8-815f-e0bbed5722bb",
              "name": "Пользователь не найден",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "user",
                    ":userId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [],
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb7a6849-f4d1-4c83-bbb8-64415f433bce",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/user/:userId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/user/:userId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/user/:userId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"email\":{\"type\":\"string\",\"format\":\"email\"},\"avatarUrl\":{\"type\":\"string\",\"format\":\"uri\"},\"bio\":{\"type\":\"string\"},\"website\":{\"type\":\"string\",\"format\":\"uri\"},\"emailVerified\":{\"type\":\"boolean\"},\"postsCount\":{\"type\":\"integer\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/user/:userId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "any",
      "value": "http://localhost:5000/",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "8ce290e8-04ec-4988-80ff-0d457f056e13",
    "name": "Main API",
    "version": {
      "raw": "1.0.0",
      "major": 1,
      "minor": 0,
      "patch": 0,
      "prerelease": [],
      "build": [],
      "string": "1.0.0"
    },
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "API для работы с пользователями, постами и комментариями",
      "type": "text/plain"
    }
  }
}